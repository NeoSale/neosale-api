-- =====================================================
-- CONFIGURA√á√ÉO COMPLETA DO SUPABASE PARA MIGRA√á√ïES AUTOM√ÅTICAS
-- Execute este script no SQL Editor do Supabase para habilitar
-- a execu√ß√£o autom√°tica de migra√ß√µes
-- =====================================================

-- 1. Criar fun√ß√£o RPC para executar SQL din√¢mico
CREATE OR REPLACE FUNCTION execute_sql(sql_query text)
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  EXECUTE sql_query;
END;
$$;

-- 2. Conceder permiss√µes para a fun√ß√£o
GRANT EXECUTE ON FUNCTION execute_sql(text) TO authenticated;
GRANT EXECUTE ON FUNCTION execute_sql(text) TO anon;

-- 3. Criar tabela de controle de migra√ß√µes
CREATE TABLE IF NOT EXISTS migrations (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  filename text NOT NULL UNIQUE,
  executed_at timestamp DEFAULT now()
);

-- 4. Criar √≠ndice na tabela migrations
CREATE INDEX IF NOT EXISTS idx_migrations_filename ON migrations(filename);

-- 5. Criar fun√ß√£o para verificar se uma tabela existe
CREATE OR REPLACE FUNCTION table_exists(table_name text)
RETURNS boolean
LANGUAGE plpgsql
AS $$
BEGIN
  RETURN EXISTS (
    SELECT 1 
    FROM information_schema.tables 
    WHERE table_schema = 'public' 
    AND table_name = $1
  );
END;
$$;

-- 6. Criar fun√ß√£o para verificar se uma coluna existe
CREATE OR REPLACE FUNCTION column_exists(table_name text, column_name text)
RETURNS boolean
LANGUAGE plpgsql
AS $$
BEGIN
  RETURN EXISTS (
    SELECT 1 
    FROM information_schema.columns 
    WHERE table_schema = 'public' 
    AND table_name = $1 
    AND column_name = $2
  );
END;
$$;

-- 7. Criar fun√ß√£o para verificar se um √≠ndice existe
CREATE OR REPLACE FUNCTION index_exists(index_name text)
RETURNS boolean
LANGUAGE plpgsql
AS $$
BEGIN
  RETURN EXISTS (
    SELECT 1 
    FROM pg_indexes 
    WHERE schemaname = 'public' 
    AND indexname = $1
  );
END;
$$;

-- 8. Conceder permiss√µes para as fun√ß√µes auxiliares
GRANT EXECUTE ON FUNCTION table_exists(text) TO authenticated;
GRANT EXECUTE ON FUNCTION table_exists(text) TO anon;
GRANT EXECUTE ON FUNCTION column_exists(text, text) TO authenticated;
GRANT EXECUTE ON FUNCTION column_exists(text, text) TO anon;
GRANT EXECUTE ON FUNCTION index_exists(text) TO authenticated;
GRANT EXECUTE ON FUNCTION index_exists(text) TO anon;

-- =====================================================
-- VERIFICA√á√ÉO: Execute para confirmar que tudo foi criado
-- =====================================================

-- Verificar se as fun√ß√µes foram criadas
SELECT 
  routine_name,
  routine_type
FROM information_schema.routines 
WHERE routine_schema = 'public' 
AND routine_name IN ('execute_sql', 'table_exists', 'column_exists', 'index_exists')
ORDER BY routine_name;

-- Verificar se a tabela migrations foi criada
SELECT 
  table_name,
  table_type
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_name = 'migrations';

-- Testar a fun√ß√£o execute_sql
SELECT execute_sql('SELECT 1') as test_function;

-- =====================================================
-- MENSAGEM DE SUCESSO
-- =====================================================

-- Se chegou at√© aqui sem erros, a configura√ß√£o est√° completa!
-- Agora voc√™ pode executar 'npm run migrate' e as migra√ß√µes
-- ser√£o executadas automaticamente no Supabase.

SELECT 'Configura√ß√£o do Supabase conclu√≠da com sucesso! üéâ' as status;